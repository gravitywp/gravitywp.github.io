{"meta":{"title":"Binary Lab","subtitle":"Understanding the world.","description":null,"author":"Guo zhen","url":"http://binarylab.cn"},"pages":[{"title":"Categories","date":"2016-12-24T16:00:12.783Z","updated":"2016-11-03T15:20:28.000Z","comments":true,"path":"categories/index.html","permalink":"http://binarylab.cn/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2016-12-24T16:00:12.783Z","updated":"2016-11-03T15:20:28.000Z","comments":true,"path":"about/index.html","permalink":"http://binarylab.cn/about/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-12-24T16:00:12.783Z","updated":"2016-11-03T15:20:28.000Z","comments":true,"path":"tags/index.html","permalink":"http://binarylab.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"computer-network","date":"2016-12-25T06:39:51.044Z","updated":"2016-12-25T06:39:51.044Z","comments":true,"path":"2016/12/25/computer-network/","link":"","permalink":"http://binarylab.cn/2016/12/25/computer-network/","excerpt":"","text":"Computer Network /* @licstart The following is the entire license notice for the JavaScript code in this tag. Copyright (C) 2012-2013 Free Software Foundation, Inc. The JavaScript code in this tag is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License (GNU GPL) as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. The code is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU GPL for more details. As additional permission under GNU GPL version 3 section 7, you may distribute non-source (e.g., minimized or compacted) forms of that code without the copy of the GNU GPL normally required by section 4, provided you include this license notice and a URL through which recipients can access the Corresponding Source. @licend The above is the entire license notice for the JavaScript code in this tag. */ Computer Network Table of Contents 1. Data link layer 1.1. Basic fetures 1.2. Protocols 1 Data link layer 1.1 Basic fetures Framming 使用特殊的不可打印的ASCII字符SOH(Start of Header)(Ox01)和EOT(End Of Transmission)(Ox04)来表示帧的开始和结束。 Transparent transport 为保证数据的透明传输,会在数据中的控制字符\"SOH\"和\"EOT\"前插入\"ESC\"(Ox1B)作为转义字符，当数据中出现\"ESC\"会在前面插入\"ESC\"转义。 Error detection 检查比特差错(Bit Error)1,提高信噪比可以减少误码率BER(Bit Error Rate)2。目前数据链路层广泛使用循环冗 余检验CRC(Cyclic Redundancy Check).丢弃有错误的帧。 &lt;!&#x2013;More&#x2013;&gt; 1.2 Protocols HDLC(High-level Data Link Control) 在通信线路较差的年代使用,是链路层可靠的传输协议，现在很少使用。 PPP(Point-to-Point-Protocol) Fetures Simple Framming Transparent 在同一链路上同时支持多种网络层协议(如IP和IPX等)的运行。 支持多种类型链路，PPPoE(PPP over Ethernet) 差错检测(error detection)，接受端进行差错检测，丢弃有差错的帧。 检测链接状态 最大传输单元(MTU)，是数据链路层的帧载荷部分的最大长度。MTU默认值为1500 bytes。 数据压缩协商,可以协商数据压缩算法， 协议的组成 将IP数据包封装到串行链路的方法。 一个用来建立和测试链路连接的链路控制协议LCP(Link Control Protocol)。 一套网络控制协议NCP(Network Control Procotol),其中的每一个协议支持不同的网络曾协议,如IP,OSI的网络 层,DECnet,AppleTalk等。 Footnotes: 1 比特在传输过程中会产生差错,1可能变为0,而0也可能变为1,这就叫做比特差错。 2 误码率表示传输错误的比特占所传输比特总数的比率。BER = error bits / bits. Date: &lt;2016-12-25 Sun 01:36&gt; Created: 2016-12-25 Sun 14:39 Emacs 25.1.1 (Org mode 8.2.10) Validate","categories":[],"tags":[],"keywords":[]},{"title":"Computer Network","slug":"computer-network","date":"2016-12-24T17:36:00.000Z","updated":"2016-12-25T07:50:40.188Z","comments":true,"path":"2016/12/25/computer-network/","link":"","permalink":"http://binarylab.cn/2016/12/25/computer-network/","excerpt":"Data link layerBasic fetures Framming 使用特殊的不可打印的ASCII字符SOH(Start of Header)(Ox01)和EOT(End Of Transmission)(Ox04)来表示帧的开始和结束。 Transparent transport 为保证数据的透明传输,会在数据中的控制字符\"SOH\"和\"EOT\"前插入\"ESC\"(Ox1B)作为转义字符，当数据中出现\"ESC\"会在前面插入\"ESC\"转义。 Error detection 检查比特差错(Bit Error)[fn:1],提高信噪比可以减少误码率BER(Bit Error Rate)[fn:2]。目前数据链路层广泛使用循环冗 余检验CRC(Cyclic Redundancy Check).丢弃有错误的帧。","text":"Data link layerBasic fetures Framming 使用特殊的不可打印的ASCII字符SOH(Start of Header)(Ox01)和EOT(End Of Transmission)(Ox04)来表示帧的开始和结束。 Transparent transport 为保证数据的透明传输,会在数据中的控制字符\"SOH\"和\"EOT\"前插入\"ESC\"(Ox1B)作为转义字符，当数据中出现\"ESC\"会在前面插入\"ESC\"转义。 Error detection 检查比特差错(Bit Error)[fn:1],提高信噪比可以减少误码率BER(Bit Error Rate)[fn:2]。目前数据链路层广泛使用循环冗 余检验CRC(Cyclic Redundancy Check).丢弃有错误的帧。 Protocols - HDLC(High-level Data Link Control) 在通信线路较差的年代使用,是链路层可靠的传输协议，现在很少使用。 - PPP(Point-to-Point-Protocol) - Fetures Simple Framming Transparent 在同一链路上同时支持多种网络层协议(如IP和IPX等)的运行。 支持多种类型链路，PPPoE(PPP over Ethernet) 差错检测(error detection)，接受端进行差错检测，丢弃有差错的帧。 检测链接状态 最大传输单元(MTU)，是数据链路层的帧载荷部分的最大长度。MTU默认值为1500 bytes。 网络曾地址协商,PPP协议必须通过协商可以知道两个通信的网络层的网络层地址，因为仅在链路层建立的连接而不知道对方的网络层地址还不能够保证网络层能够传输分组。 数据压缩协商,可以协商数据压缩算法， - 协议的组成 将IP数据包封装到串行链路的方法。 一个用来建立和测试链路连接的链路控制协议LCP(Link Control Protocol)。 一套网络控制协议NCP(Network Control Procotol),其中的每一个协议支持不同的网络曾协议,如IP,OSI的网络 层,DECnet,AppleTalk等。 - PPP的帧格式 1. Reading book notes. to be continue... [fn:1] 比特在传输过程中会产生差错,1可能变为0,而0也可能变为1,这就叫做比特差错。 [fn:2] 误码率表示传输错误的比特占所传输比特总数的比率。BER = error bits / bits.","categories":[{"name":"Network","slug":"Network","permalink":"http://binarylab.cn/categories/Network/"},{"name":"Network Protocols","slug":"Network/Network-Protocols","permalink":"http://binarylab.cn/categories/Network/Network-Protocols/"}],"tags":[{"name":"Computer Network","slug":"Computer-Network","permalink":"http://binarylab.cn/tags/Computer-Network/"},{"name":"Network Protocol","slug":"Network-Protocol","permalink":"http://binarylab.cn/tags/Network-Protocol/"},{"name":"Notes","slug":"Notes","permalink":"http://binarylab.cn/tags/Notes/"}],"keywords":[{"name":"Network","slug":"Network","permalink":"http://binarylab.cn/categories/Network/"},{"name":"Network Protocols","slug":"Network/Network-Protocols","permalink":"http://binarylab.cn/categories/Network/Network-Protocols/"}]},{"title":"Perfection vs Excellence","slug":"Perfection-vs-Excellence","date":"2016-11-05T09:23:00.000Z","updated":"2016-12-24T16:09:53.990Z","comments":true,"path":"2016/11/05/Perfection-vs-Excellence/","link":"","permalink":"http://binarylab.cn/2016/11/05/Perfection-vs-Excellence/","excerpt":"Characteristics Perfection Excellence Defensive Open to Suggestion Half Empty Half Full Over Generalize Realisic No Self-Acceptance Unconditional Acceptance Static Dynamic Fear of failure Failure as feedback Foucs on Destination Journey and Destination","text":"Characteristics Perfection Excellence Defensive Open to Suggestion Half Empty Half Full Over Generalize Realisic No Self-Acceptance Unconditional Acceptance Static Dynamic Fear of failure Failure as feedback Foucs on Destination Journey and Destination Consequences Perfetion Excellence Temporary Relief Lasting Statisfaction Inevitable Failure Possibility of Success Wastes time Appropriate Time Allocation Prone to disorders Healthy Approach Hurts Self-Esteem Continuous Improvement Harms Realtionships Allow for Growth Anxiety/Stres Creative Tension Performance? Less Pain More Gain","categories":[{"name":"Psychology","slug":"Psychology","permalink":"http://binarylab.cn/categories/Psychology/"},{"name":"Life","slug":"Psychology/Life","permalink":"http://binarylab.cn/categories/Psychology/Life/"}],"tags":[{"name":"Positive Psychology","slug":"Positive-Psychology","permalink":"http://binarylab.cn/tags/Positive-Psychology/"},{"name":"Life","slug":"Life","permalink":"http://binarylab.cn/tags/Life/"}],"keywords":[{"name":"Psychology","slug":"Psychology","permalink":"http://binarylab.cn/categories/Psychology/"},{"name":"Life","slug":"Psychology/Life","permalink":"http://binarylab.cn/categories/Psychology/Life/"}]},{"title":"Test Post","slug":"hello","date":"2016-10-30T16:00:00.000Z","updated":"2016-11-05T11:36:42.000Z","comments":true,"path":"2016/10/31/hello/","link":"","permalink":"http://binarylab.cn/2016/10/31/hello/","excerpt":"Cache - 缓存机制: 文档过期(document expiration) 和服务器再验证(server revalidation) , 文档过期后即与服务器进行在验证 - 文档过期： Expires Cache-Control:max-age - 服务器再验证: If-Modified-Since: Date If-None-Match: 实体标签在验证(Etag \"版本版本标识符\") 如果缓存或者服务器收到的请求既带有If-Modified-Since,又带有实体标签首部,那么只有当这两个条件都满足时才能返回304 Not Modified. 服务器会使用前缀\"W\"来标识弱验证器。ex: Etag: W\"v2.","text":"Cache - 缓存机制: 文档过期(document expiration) 和服务器再验证(server revalidation) , 文档过期后即与服务器进行在验证 - 文档过期： Expires Cache-Control:max-age - 服务器再验证: If-Modified-Since: Date If-None-Match: 实体标签在验证(Etag \"版本版本标识符\") 如果缓存或者服务器收到的请求既带有If-Modified-Since,又带有实体标签首部,那么只有当这两个条件都满足时才能返回304 Not Modified. 服务器会使用前缀\"W\"来标识弱验证器。ex: Etag: W\"v2. - 控制缓存能力 no-store && no-cache 响应首部 Pragma: no-cache Cache-Control: no-store Cache-Control: no-cache 标示为no-store的响应会禁止缓存对响应进行复制。缓存通常会像非缓存代理服务器一样，向客服端转发一条no-store响应，然后删除对象。 标示为no-cache的响应实际上是开源存储再本地缓存区的，只是再与服务器进行验证前，不能再将其提供给客服端使用。(do-not-server-from-cache-without-revalidation) Pragma: no-cache首部为兼容HTTP/1.0+ max-age Cache-Control: max-age=3600 Cache-Control: s-maxage=3600 // 适用于共有缓存 Expires must-revalidate Cache-Control: must-revalidate 再检查新鲜度时服务器不可以用需要返回 504 Gateway Timeout 试探性过期 客服端新鲜度控制 Code123456789101112131415161718192021222324252627282930313233343536373839404142 Orgnode.prototype.toOrgString = function (){ //console.dir(this); var n=''; for(var i=1; i&lt;=this.level;i++){ n+='*'; } if(this.todo) {n+=' '+this.todo;}; n+=' '; if(this.priority){ n+= '[#' + this.priority + '] '; } n+=this.headline; // tags will start in column 62 while(n.length&lt;=61){ n+=' '; } // Tag expansion var tagKeys=_.keys(this.tags); if(tagKeys.length&gt;0){ _.each(tagKeys, function(t){ n+=':'+t; }); n+=':'; } n+='\\n'; // PROPERTIES var pList=''; _.each(this.properties,function (v,k){ pList+=\":\"+k+\":\"+v+\"\\n\"; }); if(pList!==''){ n+=\":PROPERTIES:\\n\"+pList+\":END:\\n\"; } // Still missed: SCHEDULED, DEADLINE n+=this.body; // If last line has a double \\n\\n remove one of them... var i2=n.length - 1 - 1; if(n[i2]===n[i2+1] &amp;&amp; n[i2]==='\\n'){ n=n.slice(0,i2+1); } return n; }","categories":[{"name":"orgmode","slug":"orgmode","permalink":"http://binarylab.cn/categories/orgmode/"}],"tags":[{"name":"http","slug":"http","permalink":"http://binarylab.cn/tags/http/"},{"name":"testpost","slug":"testpost","permalink":"http://binarylab.cn/tags/testpost/"}],"keywords":[{"name":"orgmode","slug":"orgmode","permalink":"http://binarylab.cn/categories/orgmode/"}]}]}